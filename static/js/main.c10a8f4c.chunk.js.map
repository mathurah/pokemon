{"version":3,"sources":["components/Cards.js","App.js","index.js"],"names":["Card","pokemon","className","src","sprites","front_default","alt","name","App","useState","setPokemon","error","setError","apiURL","pokeAPICall","url","Promise","resolve","reject","fetch","then","res","json","data","catch","console","useEffect","a","response","loadingPokemon","results","fetchData","all","map","_pokemonData","role","aria-label","i","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAceA,MAXf,YAA4B,IAAZC,EAAW,EAAXA,QACd,OACE,yBAAKC,UAAU,QACb,6BACE,yBAAKC,IAAKF,EAAQG,QAAQC,cAAeC,IAAI,MAE/C,6BAAML,EAAQM,Q,MCyDLC,MA9Df,WAAe,MAEiBC,mBAAS,IAF1B,mBAENR,EAFM,KAEGS,EAFH,OAGaD,oBAAS,GAHtB,mBAGNE,EAHM,KAGCC,EAHD,KAIPC,EAAS,8CAWf,SAASC,EAAYC,GACnB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,MAAMJ,GACHK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,EAAQM,MAETC,OAAM,SAAAb,GACLC,GAAS,GACTa,QAAQd,MAAM,gBAAiBA,SAlBvCe,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACuBb,EAAYD,GADnC,OACMe,EADN,OAEEC,EAAeD,EAASE,SAF1B,4CADc,uBAAC,WAAD,wBAKdC,MAmBF,IAAMF,EAAc,uCAAG,WAAMN,GAAN,eAAAI,EAAA,sEACIX,QAAQgB,IAC/BT,EAAKU,IAAL,uCAAS,WAAMhC,GAAN,SAAA0B,EAAA,sEACSb,EAAYb,EAAQc,KAD7B,cACPd,EADO,yBAEAA,GAFA,2CAAT,wDAFmB,OACjBiC,EADiB,OAQrBxB,EAAWwB,GARU,2CAAH,sDAYpB,OAAOvB,EACL,8CACC,yBAAKT,UAAU,OACd,gCACE,2DAC+B,IAC7B,0BAAMiC,KAAK,MAAMC,aAAW,SAA5B,kBAKJ,yBAAKlC,UAAU,QACZD,EAAQgC,KAAI,SAAChC,EAASoC,GACrB,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAGpC,QAASA,UCvDxCsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c10a8f4c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Cards.css\";\n\nfunction Card({ pokemon }) {\n  return (\n    <div className=\"card\">\n      <div>\n        <img src={pokemon.sprites.front_default} alt=\"\" />\n      </div>\n      <div>{pokemon.name}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Cards\";\nimport \"./App.css\";\n\nfunction App() {\n  //Setting constant variables + states\n  const [pokemon, setPokemon] = useState([]);\n  const [error, setError] = useState(false);\n  const apiURL = \"https://pokeapi.co/api/v2/pokemon?limit=151\";\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await pokeAPICall(apiURL);\n      loadingPokemon(response.results);\n    }\n    fetchData();\n  });\n\n  //Purpose: This function makes calls to the pokemon API with the url passed in as a parameter\n  function pokeAPICall(url) {\n    return new Promise((resolve, reject) => {\n      fetch(url)\n        .then(res => res.json())\n        .then(data => {\n          resolve(data);\n        })\n        .catch(error => {\n          setError(true);\n          console.error(\"Error occured\", error);\n        });\n    });\n  }\n\n  //Purpose: Loading pokemon takes in the array of all pokemon and maps it to the name and image for each pokemon\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(\n      data.map(async pokemon => {\n        pokemon = await pokeAPICall(pokemon.url);\n        return pokemon;\n      })\n    );\n\n    setPokemon(_pokemonData);\n  };\n\n  //Displaying the pokemon on the page\n  return error ? (\n    <div>Error occured</div>) : \n    (<div className=\"App\">\n      <header>\n        <h1>\n          Pokemon - Using React Hooks!{\" \"}\n          <span role=\"img\" aria-label=\"emoji\">\n            ⚡️\n          </span>\n        </h1>\n      </header>\n      <div className=\"grid\">\n        {pokemon.map((pokemon, i) => {\n          return <Card key={i} pokemon={pokemon} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}